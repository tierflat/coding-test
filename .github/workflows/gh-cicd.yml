name: Laravel Deploy to AWS
on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
      - name: Create .env file
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Update environment variables
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel_test
          DB_USERNAME: root
          DB_PASSWORD: password
          APP_DEBUG: true
          APP_ENV: local
        run: php artisan config:cache

      - name: Setup database tables
        run: php artisan migrate --force

      - name: Run Tests
        run: php artisan test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
          audience: sts.amazonaws.com

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/html
            git pull origin main
            composer update --no-interaction --no-progress --prefer-dist --optimize-autoloader --ignore-platform-reqs
            composer install --no-interaction --prefer-dist --optimize-autoloader
            export DB_CONNECTION=mysql
            export DB_HOST=${{ env.DB_HOST }}
            export DB_PORT=${{ env.DB_PORT }}
            export DB_DATABASE=${{ env.DB_DATABASE }}
            export DB_USERNAME=${{ env.DB_USERNAME }}
            export DB_PASSWORD=${{ env.DB_PASSWORD }}
            export APP_DEBUG=false
            php artisan migrate --force
            php artisan key:generate
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart httpd
